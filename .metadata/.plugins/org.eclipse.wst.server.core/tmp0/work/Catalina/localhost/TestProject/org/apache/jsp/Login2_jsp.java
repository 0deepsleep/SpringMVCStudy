/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-06-14 09:36:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1560389745847L));
    _jspx_dependants.put("jar:file:/C:/SpringMVCStudy/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/TestProject/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Login2.jsp</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.bolck\r\n");
      out.write("\t{\r\n");
      out.write("\t\twidth: 100px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.btn\r\n");
      out.write("\t{\r\n");
      out.write("\t\twidth: 400px;\r\n");
      out.write("\t\theight: 50px\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t#err1\r\n");
      out.write("\t{\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t\tcolor: red;\r\n");
      out.write("\t\tfont-size: small;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#err2\r\n");
      out.write("\t{\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t\tcolor: red;\r\n");
      out.write("\t\tfont-size: small;\r\n");
      out.write("\t}\r\n");
      out.write("\t*{text-align:left;}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function()\r\n");
      out.write("\t{ \r\n");
      out.write("\t\t$(\"#btn\").click(function()\r\n");
      out.write("\t\t{\r\n");
      out.write("\r\n");
      out.write("\t\t\tif($(\"#userId\").val()==\"\" && $(\"#userPwd\").val()==\"\")\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t$(\"#err1\").css(\"display\", \"inline\");\r\n");
      out.write("\t\t\t\t$(\"#err2\").css(\"display\", \"inline\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#err1\").css(\"display\", \"none\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#userId\").val()==\"\")\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t$(\"#err1\").css(\"display\", \"inline\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#err2\").css(\"display\", \"none\");\r\n");
      out.write("\t\t\tif( $(\"#userPwd\").val()==\"\")\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t$(\"#err2\").css(\"display\", \"inline\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#memberForm\").submit();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"text-center container\">\r\n");
      out.write(" <div style=\"text-align:center; margin:0px auto;\">\r\n");
      out.write("\t<img src=\"");
      out.print(cp );
      out.write("/img/cat.png\" class=\"rounded\" alt=\"logo\"/>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"row\" style=\"margin-top: 60px;\">\r\n");
      out.write("  \t<div class=\"col-md-6- offset-md-3\">\r\n");
      out.write("  \t\t<div class=\"input-group\" id=\"memberForm\">\r\n");
      out.write("\t  \t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t    \t<span class=\"input-group-text bolck\">아이디</span>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  <input type=\"text\" id=\"userId\" name=\"userId\" class=\"form-control\" \r\n");
      out.write("\t\t  required=\"required\" placeholder=\"test@test.com\">\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t    <span id=\"err1\">아이디를 입력해주세요.</span><br>\r\n");
      out.write("\t\t   \r\n");
      out.write("\t\t<div class=\"input-group\" id=\"memberForm\">\r\n");
      out.write("\t  \t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t    \t<span class=\"input-group-text bolck\">비밀번호</span>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  \t<input type=\"password\" id=\"userPwd\" name=\"userPwd\" class=\"form-control\"\r\n");
      out.write("\t\t  required=\"required\" >\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<span id=\"err2\">비밀번호를 입력해주세요.</span><br>\r\n");
      out.write("\t\t<input type=\"checkbox\" style=\"width: 20px;\">자동로그인<br><br>\r\n");
      out.write("\t\t<button type=\"button\" id=\"btn\" name=\"btn\" class=\"btn-primary btn\">로그인</button>\r\n");
      out.write("\t\t<br /><hr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div style=\"text-align: center;\">\r\n");
      out.write("\t\t\t<a href=\"#\"> 아이디 찾기 |</a>\r\n");
      out.write("\t\t\t<a href=\"#\"> 비밀번호 찾기 |</a>\r\n");
      out.write("\t\t\t<a href=\"#\"> 회원가입</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
